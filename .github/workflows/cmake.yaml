name: CMake

on:
  - pull_request
  - workflow_dispatch

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        run: sudo apt install -y cppcheck python3-pip clang valgrind lcov && pip install cpplint

      - name: Configure CMake
        working-directory: ${{github.workspace}}/hw1/build
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_SANITIZERS=OFF

      - name: Build
        run: cmake --build ${{github.workspace}}/hw1/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/hw1/build
        run: ctest -C ${{env.BUILD_TYPE}} -VV

      - name: Coverage
        working-directory: ${{github.workspace}}/hw1/build
        run: |
          lcov -t "tests/CMakeFiles/test_matrix_dot" -o coverage.info -c -d matrix_dot_lib/ \
          && genhtml -o report coverage.info

      - name: Linters
        working-directory: ${{github.workspace}}/hw1
        run: ./linters/run.sh

      - name: Valgrind
        working-directory: ${{github.workspace}}/hw1/build
        run: |
          valgrind --tool=memcheck --leak-check=yes -s --log-fd=1 ./tests/test_matrix_dot > /tmp/valgrind_result \
          && cat /tmp/valgrind_result \
          && ! grep "LEAK SUMMARY" /tmp/valgrind_result \
          && grep "ERROR SUMMARY: 0 errors" /tmp/valgrind_result

  build-sanitizers:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/hw1/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_SANITIZERS=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/hw1/build --config ${{env.BUILD_TYPE}}

      - name: Sanitize
        working-directory: ${{github.workspace}}/hw1/build
        run: ctest -C ${{env.BUILD_TYPE}} -VV
